#!/bin/bash

set -eo pipefail

#
# This script deploys the build artifact to Pantheon.
# On the master branch the dev environment is used.
# Otherwise a multidev environment is used.
#

# Authenticate with Terminus
terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

if [[ $TERMINUS_ENV == ci-* ]]  &&  [[ $CI_BUILD == 'NO' ]]
then
  echo "We do not build CI environments. If you see this on a Pull Request, please rerun the CircleCI Workflow."
  terminus -n build:comment:add:commit --message "We do not build CI environments. If you see this on a Pull Request, please rerun the CircleCI Workflow."
  exit
fi


# Delete old multidev environments associated
# with a PR that has been merged or closed.
terminus -n build:env:delete:pr $TERMINUS_SITE --yes || true

# Prepare for Pantheon
composer -n run prepare-for-pantheon

echo "Building from $CI_BRANCH."
echo "The Main Branch is $MAIN_BRANCH."
if [[ "$CI_BRANCH" == "$MAIN_BRANCH" ]]
then
  echo "Building the Dev environment."
  if [[ "$CANONICAL_ENV" != "dev" ]]
  then
    terminus -n env:clone-content "$TERMINUS_SITE.$CANONICAL_ENV" dev
    if [[ ! -z "$SANATIZE_SCRIPT" ]]
    then
      echo "Sanatizing Database."
      # If we've set a sanatization script for the database, run it.
      $( $SANATIZE_SCRIPT )
    fi
  fi
  terminus -n build:env:push "$TERMINUS_SITE.dev" --yes
else
  # Create a new multidev environment (or push to an existing one)
  echo "Building Multidev $TERMINUS_ENV from $CANONICAL_ENV"
  if [[ "$TERMINUS_ENV" != "$DEVELOPMENT_ENV" ]] && [[ "$REBUILD_MULTIDEV_ENV_EVERY_PUSH" == "YES" ]]
  then
    echo "This project is set to clone content for multidevs every push."
    terminus -n build:env:create "$TERMINUS_SITE.$CANONICAL_ENV" "$TERMINUS_ENV" --yes --clone-content
    if [[ ! -z "$SANATIZE_SCRIPT" ]]
    then
      echo "Sanatizing Database."
      # If we've set a sanatization script for the database, run it.
      $( $SANATIZE_SCRIPT )
    fi
  elif [[ "$TERMINUS_ENV" == "$DEVELOPMENT_ENV" ]] && [[ "$REBUILD_DEVELOPMENT_ENV_EVERY_PUSH" == "YES" ]]
  then
    echo "This project is set to clone content for the github development multidev every push."
    terminus -n build:env:create "$TERMINUS_SITE.$CANONICAL_ENV" "$TERMINUS_ENV" --yes --clone-content
    if [[ ! -z "$SANATIZE_SCRIPT" ]]
    then
      echo "Sanatizing Database."
      # If we've set a sanatization script for the database, run it.
      $( $SANATIZE_SCRIPT )
    fi
  else
    terminus -n build:env:create "$TERMINUS_SITE.$CANONICAL_ENV" "$TERMINUS_ENV" --yes
  fi
fi

# We make the assummption that this script is being run from the project root.
if [ -f "./.circleci/scripts/drush-commands" ]; then
  ./.circleci/scripts/drush-commands
else
  ./vendor/ensembleiq/project_ci/scripts/pantheon/drush-commands
fi
