#!/bin/bash

set -eo pipefail

P_SITE=$1
P_ENV=$2

if [[ -z "$P_SITE" ]]; then
  P_SITE=$TERMINUS_SITE
fi
if [[ -z "$P_ENV" ]]; then
  P_ENV=$TERMINUS_ENV
fi

if [[ -z "$P_SITE" ]] || [[ -z "$P_ENV" ]]; then
  echo "Provide a site and enviornment."
  exit 1
fi

echo "Starting environment deploy commmands."
# Update the Drupal database
terminus -n drush "$P_SITE.$P_ENV" -- updatedb -y

# Clear Drupal cache
terminus -n drush "$P_SITE.$P_ENV" -- cr

if [[ "$P_ENV" != 'live' ]]; then
  echo 'UPDATE file_managed SET uri = REPLACE(uri, "s3://", "public://");' | terminus drush "$P_SITE.$P_ENV" sql:cli
  terminus -n drush "$P_SITE.$P_ENV" -- pm-enable stage_file_proxy -y
fi

echo "Importing config splits."
# If config splits are available, import them.
if [ -f "config/splits/_config_splits/config_split.config_split.config_splits.yml" ] ; then
  terminus -n drush "$P_SITE.$P_ENV" pm-enable config_split config_filter config_ignore -y
  if [[ "$P_SITE" == "path2purchase" ]]; then
    terminus -n drush "$P_SITE.$P_ENV" -- config-import --source=../config/splits/_config_splits --partial --yes
  else
    terminus -n drush "$P_SITE.$P_ENV" -- config-import --source=config/splits/_config_splits --partial --yes
  fi
  if [[ "$P_ENV" != 'live' ]] && [ -f "config/splits/_config_splits/config_split.config_split.live.yml" ]; then
    terminus -n drush "$P_SITE.$P_ENV" -- config-import --partial --source=config/splits/live -y
    terminus -n drush "$P_SITE.$P_ENV" -- s3fs:refresh-cache
  else
    terminus -n drush "$P_SITE.$P_ENV" -- config-import --partial --source=config/splits/test -y
  fi
  terminus -n drush "$P_SITE.$P_ENV" -- cr
    # Partial split imports for PS
  if [[ "$P_SITE" == "profession-sante" ]]; then
    echo "Importing partial default config for PS."
    terminus -n drush --yes "$P_SITE.$P_ENV" -- config-import --partial --source=config/default -y
    terminus -n drush "$P_SITE.$P_ENV" -- cr
    echo "Importing partial upstream config for PS."
    terminus -n drush --yes "$P_SITE.$P_ENV" -- config-import --partial --source=config/splits/upstream -y
    terminus -n drush "$P_SITE.$P_ENV" -- cr
    echo "Importing partial local config for PS."
    terminus -n drush --yes "$P_SITE.$P_ENV" -- config-import --partial --source=config/splits/local -y
    if [[ "$P_ENV" != 'live' ]]; then
      echo "Importing partial test config for PS."
      terminus -n drush --yes "$P_SITE.$P_ENV" -- config-import --partial --source=config/splits/test -y
    fi
  fi
fi


# If exported configuration is available, then import it.
if [ -f "config/default/system.site.yml" ] ; then
  echo "Importing default config."
  terminus -n drush "$P_SITE.$P_ENV" -- config-import --yes
fi

# Clear Drupal cache
terminus -n drush "$P_SITE.$P_ENV" -- cr

echo "Clearing the Edge cache."
# Clear the environment cache
terminus -n env:clear-cache $P_SITE.$P_ENV

if [[ "$P_ENV" != 'live' ]]; then
  # Ensure secrets are set
  terminus -n secrets:set "$P_SITE.$P_ENV" token "$GITHUB_TOKEN" --file='github-secrets.json' --clear --skip-if-empty
fi

echo "Done deploying. Your environment is ready for your review."
