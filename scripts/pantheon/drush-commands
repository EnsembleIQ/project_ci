#!/bin/bash

set -eo pipefail

P_SITE=$1
P_ENV=$2

if [[ -z "$P_SITE" ]]; then
  P_SITE=$TERMINUS_SITE
fi
if [[ -z "$P_ENV" ]]; then
  P_ENV=$TERMINUS_ENV
fi

if [[ -z "$P_SITE" ]] || [[ -z "$P_ENV" ]]; then
  echo "Provide a site and enviornment."
  exit 1
fi

echo "Starting environment deploy commmands."
# Update the Drupal database
terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- updatedb -y

# Clear Drupal cache
terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- cr

if [[ "$TERMINUS_ENV" != 'live' ]]; then
  echo 'UPDATE file_managed SET uri = REPLACE(uri, "s3://", "public://");' | terminus drush "$TERMINUS_SITE.$TERMINUS_ENV" sql:cli
  terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- pm-enable stage_file_proxy -y
fi

# Revert the Features
terminus -n drush --yes "$TERMINUS_SITE.$TERMINUS_ENV" -- features-import eiq_base_feature -y

# Push the special site features.
if [[ "$TERMINUS_SITE" == "canadian-healthcare" ]] || [[ "$TERMINUS_SITE" == "profession-sante" ]]; then
  terminus -n drush --yes "$TERMINUS_SITE.$TERMINUS_ENV" -- config-import --partial --source=modules/custom/eiq_override/chn_migrate/config/optional -y
fi

# Clear Drupal cache
terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- cr

echo "Clearing the Edge cache."
# Clear the environment cache
terminus -n env:clear-cache $TERMINUS_SITE.$TERMINUS_ENV

if [[ "$TERMINUS_ENV" != 'live' ]]; then
  # Ensure secrets are set
  terminus -n secrets:set "$TERMINUS_SITE.$TERMINUS_ENV" token "$GITHUB_TOKEN" --file='github-secrets.json' --clear --skip-if-empty
fi

echo "Done deploying. Your environment is ready for your review."
